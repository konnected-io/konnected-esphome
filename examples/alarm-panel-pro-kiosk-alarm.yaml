####
##
## Konnected Alarm Panel Pro (ESP32) 
## Standalone Alarm System with Latch arming/disarming (kiosk alarm)
##
## filename: alarm-panel-pro-kiosk-alarm.yaml
## GitHub: https://github.com/konnected-io/konnected-esphome
## Buy Konnected hardware: https://konnected.io
## Help & Support: https://help@konnected.io (support is provided for verified buyers of Konnected hardware)
##
## This firmware configuration implements a basic local alarm system with the Alarm Panel Pro that is
## armed and disarmed exclusively by an external signal from an electronically controlled latch.
## Leveraging ESPHome's new native Alarm Control Panel component,
## the Konnected device the alarm panel states and actuates a siren/alarm when the alarm is triggered.
##
## ZONE CONFIGURATION IN THIS EXAMPLE
## 
## Zone 1: Door input sensor
## Zone 2: Pedestal door
## Alarm 1: Audible alarm

substitutions:
  name: konnected
  friendly_name: Konnected
  project_name: konnected.alarm-panel-pro-kiosk-alarm
  project_version: 0.2.0
  sensor_debounce_time: 200ms
  blink_on_state: 'true'
  zone1: GPIO4
  zone2: GPIO2
  zone3: GPIO15
  zone4: GPIO13
  zone5: GPIO18
  zone6: GPIO14
  zone7: GPIO33
  zone8: GPIO32
  zone9: GPIO36
  zone10: GPIO39
  zone11: GPIO34
  zone12: GPIO35
  alarm1: GPIO12
  alarm2_out2: GPIO5
  out1: GPIO23
  status_led: GPIO3
  ethernet_type: RTL8201

packages:
  remote_package:
    url: https://github.com/konnected-io/konnected-esphome
    ref: master
    refresh: 5min
    files:
    - packages/core-esp32.yaml
    - packages/status-led.yaml
    - packages/ethernet.yaml
    - packages/alarm-panel/zone1.yaml
    - packages/alarm-panel/zone2.yaml    
    # - packages/alarm-panel/zone8.yaml
    - packages/alarm-panel/zone9.yaml
    - packages/alarm-panel/alarm1.yaml    

binary_sensor:

  - id: !extend zone1
    name: Desktop Door
    device_class: door

  - id: !extend zone2
    name: Pedestal Door
    device_class: door

  # FOR FUTURE USE
  # Tilt sensor
  # Always trigger the alarm when tilted, even if disarmed
  # - id: !extend zone8
  #   name: Tilt
  #   device_class: tamper
  #   on_state:
  #     then:
  #       - if:
  #           condition:
  #             lambda: 'return x;'
  #           then:
  #             - alarm_control_panel.triggered: acp1

  # Computed state of the electronically controlled latch which is
  # unlocked when the signal is high. Upon unlocking, the alarm system 
  # disarms so that the user can open the door.
  - id: !extend zone9
    name: Latch
    device_class: lock
    on_state:
      then:
        - if:
            condition:
              lambda: 'return x;'
            then:
              - alarm_control_panel.disarm: acp1

  # Ready state - A computed state if the alarm system is ready to
  # arm based on the state of both doors and the electronically
  # controlled latch
  # ON means problem; OFF means ready
  # When the state changes to ready, automatically reset and arm the alarm
  - id: ready
    name: Ready
    device_class: problem
    platform: template
    lambda: 'return id(zone9).state || id(zone1).state || id(zone2).state;'
    on_state:
      then:
        - if:
            condition:
              lambda: 'return !x;'
            then:
              - alarm_control_panel.disarm: acp1
              - alarm_control_panel.arm_away: acp1

switch:   
  - id: !extend alarm1
    name: Siren

# Panic button - instantly trigger the alarm, regardless of state
button:
  - id: panic_button
    platform: template
    name: Panic Button
    on_press:
      - alarm_control_panel.triggered: acp1

script:
  - id: trigger_timeout
    then:
      - switch.turn_on: alarm1
      - delay: 3min
      - alarm_control_panel.disarm: acp1

alarm_control_panel:
  platform: template
  name: Konnected Alarm
  id: acp1
  pending_time: 2s
  trigger_time: 3min
  binary_sensors:
      - input: zone1
      - input: zone2
      # - input: zone8
      #   trigger_mode: instant

  on_triggered:
    then:
      - script.execute: trigger_timeout
  on_cleared:
    then:
      - switch.turn_off: alarm1
      - script.stop: trigger_timeout

logger:
  logs:
    sensor: INFO

web_server:
  version: 3
